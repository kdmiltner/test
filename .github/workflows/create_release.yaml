name: Create Release
on: 
  workflow_call:
    outputs:
      version:
        description: 'Release version'
        value: ${{ jobs.create-release.outputs.version }}
  workflow_dispatch:
    inputs:
      name:
        description: 'Test'
        required: false
        default: 'main'
    outputs:
      version:
        description: 'Release version'
        value: ${{ jobs.create-release.outputs.version }}

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}

jobs:
  create-release: 
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: Set Date
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "DATE<<$EOF" >> "$GITHUB_ENV"
        make date >> "$GITHUB_ENV"
        echo "$EOF" >> "$GITHUB_ENV"
    
    - name: Set Code Version
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "CODE_VERSION<<$EOF" >> "$GITHUB_ENV"
        make code_version >> "$GITHUB_ENV"
        echo "$EOF" >> "$GITHUB_ENV"

    - name: Set Git Version
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "REPO_VERSION<<$EOF" >> "$GITHUB_ENV"
        make git_version
        echo "$EOF" >> "$GITHUB_ENV"

    - name: Compare Versions
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "RESULT<<$EOF" >> "$GITHUB_ENV"
        make compare_versions >> "$GITHUB_ENV"
        echo "$EOF" >> "$GITHUB_ENV"

    - name: Echo Environment Variables
      run: |
        echo ${{ env.DATE }}
        echo ${{ env.CODE_VERSION }}
        echo ${{ env.REPO_VERSION }}
        echo ${{ env.RESULT }}

    - name: Create release (if new version)
      if: ${{ env.RESULT == 'PASS' }} 
      run: |
        curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ env.GITHUB_TOKEN }}" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/kdmiltner/test/releases -d '{"tag_name":"v${{ env.CODE_VERSION }}","target_commitish":"main","name":"v${{ env.CODE_VERSION }}","body":"Deployed on ${{ env.DATE }}","draft":false,"prerelease":false,"generate_release_notes":true}'

    - name: Echo Version to Outputs
      id: version
      run: |
        echo "version=${{ env.CODE_VERSION }}" >> "$GITHUB_OUTPUT"